sel <- c(paste0("D", 36:38, ".zip"), paste0("C", 36:39, ".zip"), paste0("B", 36:39, ".zip"), paste0("A", 36:38, ".zip"))
i=1
system(paste("7za e", sel[i]))
i=2
system(paste("7za e", sel[i], "x"))
system(paste("7za x", sel[i]))
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
?list.files
tmp.lst <- sapply(sel, function(x){list.files(pattern=glob2rx(paste0(x, "/*.hgt")), full.names=TRUE)})
str(tmp.lst)
paste0(x, "/*.hgt")
paste0(sel[i], "/*.hgt")
tmp.lst <- sapply(sel, function(x){list.files(pattern=glob2rx(paste0(strsplit(x, ".zip")[[1]][1], "/*.hgt")), full.names=TRUE)})
str(tmp.lst)
paste0(strsplit(x, ".zip")[[1]][1], "/*.hgt")
paste0(strsplit(sel[1], ".zip")[[1]][1], "/*.hgt")
tmp.lst <- sapply(sel, function(x){list.files(path=strsplit(x, ".zip")[[1]][1], pattern=glob2rx("*.hgt"), full.names=TRUE)})
str(tmp.lst)
tmp.lst <- unlist(sapply(sel, function(x){list.files(path=strsplit(x, ".zip")[[1]][1], pattern=glob2rx("*.hgt"), full.names=TRUE)}))
str(tmp.lst)
unlink("my_liste.txt")
cat(tmp.lst, sep="\n", file="my_liste.txt")
gdalbuildvrt(input_file_list="my_liste.txt", output.vrt="et.vrt")
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
gdalbuildvrt(input_file_list="my_liste.txt", output.vrt="et.vrt")
1/1200
gdalwarp("et.vrt", "ET_DEMSRE6a_100m.tif", tr=c(1/1200,1/1200), r="near", ot="Int16", overwrite=TRUE)
sel <- c(paste0("D", 36:39, ".zip"), paste0("C", 36:39, ".zip"), paste0("B", 36:39, ".zip"), paste0("A", 36:38, ".zip"))
sel[4]
i=4
system(paste("7za x", sel[i]))
tmp.lst <- unlist(sapply(sel, function(x){list.files(path=strsplit(x, ".zip")[[1]][1], pattern=glob2rx("*.hgt"), full.names=TRUE)}))
unlink("my_liste.txt")
cat(tmp.lst, sep="\n", file="my_liste.txt")
gdalbuildvrt(input_file_list="my_liste.txt", output.vrt="et.vrt")
gdalwarp("et.vrt", "ET_DEMSRE6a_100m.tif", tr=c(1/1200,1/1200), r="near", ot="Int16", overwrite=TRUE)
q()
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
tmp.lst <- unlist(sapply(sel2, function(x){list.files(path=strsplit(x, ".zip")[[1]][1], pattern=glob2rx("*.hgt"), full.names=TRUE)}))
lu.csy <- "+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs"
tmp.lst <- unlist(sapply(sel2, function(x){list.files(path=strsplit(x, ".zip")[[1]][1], pattern=glob2rx("*.hgt"), full.names=TRUE)}))
unlink("my_liste.txt")
cat(tmp.lst, sep="\n", file="my_liste.txt")
gdalbuildvrt(input_file_list="my_liste.txt", output.vrt="hu.vrt")
gdalwarp("hu.vrt", "HU_DEMSRE6a_250m.tif", t_srs=lu.csy, tr=c(250,250), r="bilinear", ot="Int16", overwrite=TRUE, te=c(4787000, 2549000, 5280000, 2896000))
q()
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
sel <- list.files(pattern=glob2rx("*.zip$"), full.names=TRUE)
str(sel)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
tmp.lst <- unlist(sapply(sel, function(x){list.files(path=strsplit(x, ".zip")[[1]][1], pattern=glob2rx("*.hgt"), full.names=TRUE)}))
str(tmp.lst)
unlink("my_liste.txt")
cat(tmp.lst, sep="\n", file="my_liste.txt")
gdalbuildvrt(input_file_list="my_liste.txt", output.vrt="globe.vrt")
?list.files
gdalwarp("globe.vrt", "DEMSRE5a_250m.tif", t_srs="+proj=longlat +datum=WGS84", dstfile=outn, tr=c(1/480,1/480), r="near", te=c(-180,-90,180,90), ot="Int16", overwrite=TRUE)
gdalwarp("globe.vrt", dstfile="DEMSRE5a_250m.tif", t_srs="+proj=longlat +datum=WGS84", tr=c(1/480,1/480), r="near", te=c(-180,-90,180,90), ot="Int16", overwrite=TRUE)
gdalwarp("globe.vrt", dstfile="DEMSRE5a_5km.tif", t_srs="+proj=longlat +datum=WGS84", tr=c(1/20,1/20), r="average", te=c(-180,-90,180,90), ot="Int16", overwrite=TRUE)
tmp.lst <- unlist(sapply(sel, function(x){list.files(path=strsplit(x, ".zip")[[1]][1], pattern=glob2rx("*.hgt"), full.names=TRUE)}))
View(tmp.lst)
str(sel)
tmp.lst <- list.files(pattern=glob2rx("*.hgt$"), full.names=TRUE, recursive=TRUE)
str(tmp.lst)
unlink("my_liste.txt")
cat(tmp.lst, sep="\n", file="my_liste.txt")
gdalbuildvrt(input_file_list="my_liste.txt", output.vrt="globe.vrt")
gdalwarp("globe.vrt", dstfile="DEMSRP3a.tif", t_srs="+proj=longlat +datum=WGS84", tr=c(1/120,1/120), r="average", srcnodata=0, dstnodata=-32768, te=c(-180,-90,180,90), ot="Int16", overwrite=TRUE)
q()
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
tmp.lst <- list.files(pattern=glob2rx("*.hgt$"), full.names=TRUE, recursive=TRUE)
str(tmp.lst)
unlink("my_liste.txt")
cat(tmp.lst, sep="\n", file="my_liste.txt")
gdalbuildvrt(input_file_list="my_liste.txt", output.vrt="globe.vrt")
GDALinfo(tmp.lst[100])
GDALinfo(tmp.lst[1000])
GDALinfo(tmp.lst[5000])
GDALinfo(tmp.lst[15000])
unlink("DEMSRP3a.tif")
gdalwarp("globe.vrt", dstfile="DEMSRP3a.tif", tr=c(1/120,1/120), r="average", srcnodata=-32768, dstnodata=-32768, te=c(-180,-90,180,90), ot="Int16", overwrite=TRUE)
save.image("E:\\SRTM100m\\.RData")
load("G:\\Equi7\\equi7t3.rda")
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
t=equi7t3[[1]]
j=5
nfile <- paste0("tiled/DEM_", strsplit(paste(t@data[j,"SHORTNAME"]), " ")[[1]][2], "_", t@data[j,"TILE"], ".tif")
te <- as.vector(bbox(t[j,]))
nfile
te
gdalwarp("globe.vrt", dstfile=nfile, t_srs=t_srs, tr=c(250,250), r="bilinear", srcnodata=-32768, dstnodata=-32768, te=te, ot="Int16")
t_srs = proj4string(t)
gdalwarp("globe.vrt", dstfile=nfile, t_srs=t_srs, tr=c(250,250), r="bilinear", srcnodata=-32768, dstnodata=-32768, te=te, ot="Int16")
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
library(snowfall)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
names(equi7t3)
load("G:\\Equi7\\equi7t3.rda")
names(equi7t3)
j=1
t.lst <- list.files(path="../tiled", pattern=glob2rx(paste0("DEM_", names(equi7t3)[j], "_*_*.tif$")), full.names=TRUE, recursive=TRUE)
str(t.lst)
getwd()
t.lst <- list.files(path="tiled", pattern=glob2rx(paste0("DEM_", names(equi7t3)[j], "_*_*.tif$")), full.names=TRUE, recursive=TRUE)
getwd()
str(t.lst)
unlink("my_liste.txt")
cat(t.lst, sep="\n", file="my_liste.txt")
gdalbuildvrt(input_file_list="my_liste.txt", output.vrt=paste0(names(equi7t3)[j], ".vrt"))
paste0(names(equi7t3)[j], ".vrt")
paste0("DEM_", names(equi7t3)[j], "_250m.tif")
gdalwarp(paste0(names(equi7t3)[j], ".vrt"), dstfile=paste0("DEM_", names(equi7t3)[j], "_250m.tif"), r="near", srcnodata=-32768, dstnodata=-32768, ot="Int16")
length(equi7t3)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
q()
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
?gunzip
inputFile <- "HU_DEMSRE6a_250m.tif.gz"
set.file.extension(inputFile, ".tif")
set.file.extension(inputFile, "")
strsplit(inputFile, ".gz")[[1]][1]
gunzip(inputFile)
filen <- strsplit(inputFile, ".gz")[[1]][1]
gdal.dir <- shortPathName("C:/Program files/GDAL")
gdal_translate <- paste0(gdal.dir, "/gdal_translate.exe")
gdalwarp <- paste0(gdal.dir, "/gdalwarp.exe")
system(paste(gdal_translate, set.file.extension(filen, ".tif"), set.file.extension(filen, ".sdat"), '-ot \"Int16\" -of \"SAGA\"'))
unlink(set.file.extension(filen, ".tif"))
?gzip
rsaga.slope(in.dem=set.file.extension(filen, ".sgrd"), out.slope=set.file.extension(gsub("DEM", "SLP", filen), ".sgrd"), check.module.exists = FALSE, show.output.on.console = FALSE)
?zip
zip(set.file.extension(gsub("DEM", "SLP", filen), ".zip"), files=list.files(pattern=glob2rx(set.file.extension(gsub("DEM", "SLP", filen), ".*"))))
slp.lst <- list.files(pattern=glob2rx(set.file.extension(gsub("DEM", "SLP", filen), ".*")))
unlink(slp.lst)
rsaga.curvature(in.dem=set.file.extension(filen, ".sgrd"), out.curv=set.file.extension(gsub("DEM", "CRV", filen), ".sgrd"), check.module.exists = FALSE, show.output.on.console = FALSE)
crv.lst <- list.files(pattern=glob2rx(set.file.extension(gsub("DEM", "CRV", filen), ".*")))
zip(set.file.extension(gsub("DEM", "CRV", filen), ".zip"), files=crv.lst)
unlink(crv.lst)
twi.lst <- list.files(pattern=glob2rx(set.file.extension(gsub("DEM", "TWI", filen), ".*")))
zip(set.file.extension(gsub("DEM", "TWI", filen), ".zip"), files=twi.lst)
rsaga.wetness.index(in.dem=set.file.extension(filen, ".sgrd"), out.wetness.index=set.file.extension(gsub("DEM", "TWI", filen), ".sgrd"), check.module.exists = FALSE, show.output.on.console = FALSE)
twi.lst <- list.files(pattern=glob2rx(set.file.extension(gsub("DEM", "TWI", filen), ".*")))
try( zip(set.file.extension(gsub("DEM", "TWI", filen), ".zip"), files=twi.lst) )
rsaga.wetness.index(in.dem=set.file.extension(filen, ".sgrd"), out.wetness.index=set.file.extension(gsub("DEM", "TWI", filen), ".sgrd"), slope.min=.2, check.module.exists = FALSE, show.output.on.console = FALSE)
rsaga.wetness.index(in.dem=set.file.extension(filen, ".sgrd"), out.wetness.index=set.file.extension(gsub("DEM", "TWI", filen), ".sgrd"), slope.min=0.2, check.module.exists = FALSE, show.output.on.console = FALSE)
rsaga.geoprocessor(lib="ta_hydrology", module=15, param=list(DEM=set.file.extension(filen, ".sgrd"), TWI=set.file.extension(gsub("DEM", "TWI", filen), ".sgrd"), SLOPE_MIN=.2), check.module.exists = FALSE, show.output.on.console = FALSE)
rsaga.geoprocessor(lib="ta_channels", module=7, param=list(ELEVATION=set.file.extension(filen, ".sgrd"), VALLEY_DEPTH=set.file.extension(gsub("DEM", "VDP", filen), ".sgrd")), check.module.exists = FALSE, show.output.on.console = FALSE)
rsaga.geoprocessor(lib="ta_morphometry", module=8, param=list(DEM=set.file.extension(filen, ".sgrd"), MRVBF=set.file.extension(gsub("DEM", "VBF", filen), ".sgrd")), check.module.exists = FALSE, show.output.on.console = FALSE)
rsaga.geoprocessor(lib="ta_morphometry", module=8, param=list(DEM=set.file.extension(filen, ".sgrd"), MRVBF=set.file.extension(gsub("DEM", "VBF", filen), ".sgrd"), T_SLOPE=25, P_SLOPE=6), check.module.exists = FALSE, show.output.on.console = FALSE)
rsaga.geoprocessor(lib="ta_morphometry", module=8, param=list(DEM=set.file.extension(filen, ".sgrd"), MRVBF=set.file.extension(gsub("DEM", "VBF", filen), ".sgrd"), T_SLOPE=8, P_SLOPE=2), check.module.exists = FALSE, show.output.on.console = FALSE)
rsaga.geoprocessor(lib="ta_morphometry", module=10, param=list(DEM=set.file.extension(filen, ".sgrd"), MBI=set.file.extension(gsub("DEM", "MBI", filen), ".sgrd")), check.module.exists = FALSE, show.output.on.console = FALSE)
rsaga.geoprocessor(lib="ta_morphometry", module=11, param=list(DEM=set.file.extension(filen, ".sgrd"), DIR=set.file.extension(gsub("DEM", "DIR", filen), ".sgrd")), check.module.exists = FALSE, show.output.on.console = FALSE)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
saga_TA(inputFile="HU_DEMSRE6a_250m.tif.gz")
slp.lst <- list.files(pattern=glob2rx(set.file.extension(gsub("DEM", "SLP", filen), ".*")))
slp.lst
crv.lst <- list.files(pattern=glob2rx(set.file.extension(gsub("DEM", "CRV", filen), ".*")))
crv.lst
rsaga.slope(in.dem=set.file.extension(filen, ".sgrd"), out.slope=set.file.extension(gsub("DEM", "SLP", filen), ".sgrd"), check.module.exists = FALSE, show.output.on.console = FALSE)
slp.lst <- list.files(pattern=glob2rx(set.file.extension(gsub("DEM", "SLP", filen), ".*")))
slp.lst
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
saga_TA(inputFile="HU_DEM.tif.gz")
?gunzip
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
q()
?set.file.extension
library(RSAGA)
?set.file.extension
dem.lst <- sapply(c(".sgrd", ".sdat", ".prj", ".mgrd"), set.file.extension, filename=filen)
dem.lst
q()
source("G:/Strato/DEM_parameters_parallel.R")
j=1
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
source("G:/Strato/DEM_parameters_parallel.R")
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
source("G:/Strato/DEM_parameters_parallel.R")
names(equi7t3)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
gc()
gc()
source("G:/Strato/DEM_parameters_parallel.R")
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
rsaga.get.usage(lib="ta_hydrology", module=15)
suppressWarnings( rsaga.geoprocessor(lib="grid_tools", module=0, param=list(INPUT=set.file.extension(filen, ".sgrd"), TARGET_OUT_GRID=set.file.extension(gsub("DEM", "DEMd", filen), ".sgrd"), SCALE_UP_METHOD=6, TARGET_DEFINITION=0, TARGET_USER_SIZE=500), check.module.exists = FALSE, show.output.on.console = FALSE, warn=FALSE, env=myenv) )
inputFile
getwd()
inputFile="DEM_AF_036_090.tif.gz"; smaskFile="SMK_AF_036_090.tif.gz"
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
j=1
inputFile=paste0("DEM_", names(equi7t3)[j], "_250m.tif.gz")
smaskFile=paste0("SMK_", names(equi7t3)[j], "_250m.tif.gz")
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
suppressWarnings( rsaga.geoprocessor(lib="grid_tools", module=0, param=list(INPUT=set.file.extension(filen, ".sgrd"), TARGET_OUT_GRID=set.file.extension(gsub("250m", "500m", filen), ".sgrd"), SCALE_UP_METHOD=6, TARGET_DEFINITION=0, TARGET_USER_SIZE=500), check.module.exists = FALSE, show.output.on.console = FALSE, warn=FALSE, env=myenv) )
source("G:/Strato/DEM_parameters_parallel.R")
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
q()
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
q()
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
getwd()
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
j=1
te <- as.vector(bbox(equi7t3[[j]]))
te
gdalwarp("H:\\srtm15_plus\\GMTED2010_250m.tif", dstfile=paste0("GMTED_", names(equi7t3)[j], "_250m.sdat"), r="bilinear", t_srs=proj4string(equi7t3[[j]]), te=te, srcnodata=-32768, dstnodata=-32768, ot="Int16", of="SAGA")
gdalinfo("H:\\srtm15_plus\\GMTED2010_250m.tif")
gdalinfo("DEM_AF_250m.sdat")
x <- raster("DEM_AF_250m.sdat")
x
extent(x)
unclass(extent(x))
?extent
te
te <- as.vector(extent(raster(paste0("DEM_", names(equi7t3)[j], "_250m.sdat"))))
te
te <- extent(raster(paste0("DEM_", names(equi7t3)[j], "_250m.sdat")))
as.vector(te[c(1,3,2,4)])
as.vector(te)[c(1,3,2,4)]
te <- extent(raster(paste0("DEM_", names(equi7t3)[j], "_250m.sdat")))
gdalwarp("H:\\srtm15_plus\\GMTED2010_250m.tif", dstfile=paste0("GMTED_", names(equi7t3)[j], "_250m.tif"), r="near", t_srs=proj4string(equi7t3[[j]]), te=as.vector(te)[c(1,3,2,4)], dstnodata=-32768, ot="Int16") # , of="SAGA"
gdalinfo("GMTED_AF_250m.tif")
gdalwarp("H:\\srtm15_plus\\GMTED2010_250m.tif", dstfile=paste0("GMTED_", names(equi7t3)[j], "_250m.tif"), tr=c(250,250), r="near", t_srs=proj4string(equi7t3[[j]]), te=as.vector(te)[c(1,3,2,4)], srcnodata=-32768, dstnodata=-32767, ot="Int16", of="SAGA") #
te <- extent(raster(paste0("DEM_", names(equi7t3)[j], "_250m.sdat")))
as.vector(te)[c(1,3,2,4)]
gdalwarp("H:\\srtm15_plus\\GMTED2010_250m.tif", dstfile=paste0("GMTED_", names(equi7t3)[j], "_250m.tif"), tr=c(250,250), r="near", t_srs=proj4string(equi7t3[[j]]), te=as.vector(te)[c(1,3,2,4)], srcnodata=-32768, dstnodata=-32767, ot="Int16", of="SAGA") #
gdalwarp("H:\\srtm15_plus\\GMTED2010_250m.tif", dstfile=paste0("GMTED_", names(equi7t3)[j], "_250m.sdat"), tr=c(250,250), r="near", t_srs=proj4string(equi7t3[[j]]), te=as.vector(te)[c(1,3,2,4)], srcnodata=-32768, dstnodata=-32767, ot="Int16", of="SAGA") #
rsaga.geoprocessor(lib="grid_calculus", module=3, param=list(A=paste0("GMTED_", names(equi7t3)[j], "_250m.sgrd"), B=paste0("DEM_", names(equi7t3)[j], "_250m.sgrd"), C=paste0("diff_", names(equi7t3)[j], "_250m.sdat")), show.output.on.console = FALSE)
library(RSAGA)
rsaga.env()
rsaga.env()
rsaga.geoprocessor(lib="grid_calculus", module=3, param=list(A=paste0("GMTED_", names(equi7t3)[j], "_250m.sgrd"), B=paste0("DEM_", names(equi7t3)[j], "_250m.sgrd"), C=paste0("diff_", names(equi7t3)[j], "_250m.sdat")), show.output.on.console = FALSE)
?rsaga.geoprocessor
rsaga.geoprocessor(lib="grid_calculus", module=3, param=list(A=paste0("GMTED_", names(equi7t3)[j], "_250m.sgrd"), B=paste0("DEM_", names(equi7t3)[j], "_250m.sgrd"), C=paste0("diff_", names(equi7t3)[j], "_250m.sdat")), check.module.exists =FALSE, show.output.on.console = FALSE)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
te <- extent(raster(paste0("DEM_", names(equi7t3)[j], "_250m.sdat")))
j=1
te <- extent(raster(paste0("DEM_", names(equi7t3)[j], "_250m.sdat")))
gdalwarp("H:\\srtm15_plus\\topo15.grd", dstfile=paste0("SRTM_", names(equi7t3)[j], "_250m.sdat"), tr=c(250,250), r="near", t_srs=proj4string(equi7t3[[j]]), te=as.vector(te)[c(1,3,2,4)], srcnodata=-32768, dstnodata=-32767, ot="Int16", of="SAGA") ## "H:\\srtm15_plus\\GMTED2010_250m.tif"
gdalinfo("H:\\srtm15_plus\\topo15.grd")
gdalwarp("H:\\srtm15_plus\\topo15.grd", dstfile=paste0("SRTM_", names(equi7t3)[j], "_250m.tif"), tr=c(250,250), r="near", t_srs=proj4string(equi7t3[[j]]), te=as.vector(te)[c(1,3,2,4)], dstnodata=-32767, ot="Int16") ## , of="SAGA" srcnodata=-32768, "H:\\srtm15_plus\\GMTED2010_250m.tif"
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
gdalinfo("H:\\srtm15_plus\\topo15.tif")
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
q()
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
j=1
rsaga.geoprocessor(lib="statistics_grid", module=4, param=list(GRIDS=c(paste0("GMTED_", names(equi7t3)[j], "_250m.sgrd"), paste0("DEM_", names(equi7t3)[j], "_250m.sgrd"), paste0("SRTMGL3_", names(equi7t3)[j], "_250m.sgrd")), MEAN=paste0("MDEM_", names(equi7t3)[j], "_250m.sgrd"), STDDEV=paste0("stdev_", names(equi7t3)[j], "_250m.sdat")), check.module.exists =FALSE, show.output.on.console = FALSE, warn=FALSE)
?rsaga.geoprocessor
rsaga.env()
paste0(paste0("GMTED_", names(equi7t3)[j], "_250m.sgrd"), "; ", paste0("DEM_", names(equi7t3)[j], "_250m.sgrd"), "; " paste0("SRTMGL3_", names(equi7t3)[j], "_250m.sgrd"))
paste0(paste0("GMTED_", names(equi7t3)[j], "_250m.sgrd"), "; ", paste0("DEM_", names(equi7t3)[j], "_250m.sgrd"), "; ", paste0("SRTMGL3_", names(equi7t3)[j], "_250m.sgrd"))
rsaga.geoprocessor(lib="statistics_grid", module=4, param=list(GRIDS=paste0(paste0("GMTED2010_", names(equi7t3)[j], "_250m.sgrd"), "; ", paste0("DEM_", names(equi7t3)[j], "_250m.sgrd"), "; ", paste0("SRTMGL3_", names(equi7t3)[j], "_250m.sgrd")), MEAN=paste0("MDEM_", names(equi7t3)[j], "_250m.sgrd"), STDDEV=paste0("stdev_", names(equi7t3)[j], "_250m.sdat")), check.module.exists =FALSE, show.output.on.console = FALSE, warn=FALSE)
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
q()
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
j=1
gdal_translate(paste0("MDEM_", names(equi7t3)[j], "_250m.sdat"), paste0("MDEM_", names(equi7t3)[j], "_250m.tif"), a_nodata=-32767, ot="Int16", s_srs=proj4string(equi7t3[[j]]))
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
names(equi7t3)
getwd()
te <- extent(raster(paste0("DEM_", names(equi7t3)[4], "_250m.sdat")))
proj4string(equi7t3[["EU"]])
gdalinfo("eudem_dem_4258_europe.tif")
gdalinfo("eudem_dem_4258_europe.tif")
gdalwarp("eudem_dem_4258_europe.tif", dstfile="eudem_dem_4258_europe.sdat", tr=c(250,250), r="average", t_srs=proj4string(equi7t3[["EU"]]), te=as.vector(te)[c(1,3,2,4)], dstnodata=-32767, ot="Int16", of="SAGA")
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
j=1
gdal_translate(paste0("MDEM_", names(equi7t3)[j], "_250m.sdat"), paste0("MDEM_", names(equi7t3)[j], "_250m.tif"), a_nodata=-99999, ot="Int16", s_srs=proj4string(equi7t3[[j]]))
gdalinfo(paste0("MDEM_", names(equi7t3)[j], "_250m.tif"))
gdal_translate(paste0("MDEM_", names(equi7t3)[j], "_250m.sdat"), paste0("MDEM_", names(equi7t3)[j], "_250m.tif"), a_nodata=-32767, ot="Int16", s_srs=proj4string(equi7t3[[j]]))
gdalinfo(paste0("MDEM_", names(equi7t3)[j], "_250m.tif"))
j=3
j=4
gdal_translate(paste0("MDEM_", names(equi7t3)[j], "_250m.sdat"), paste0("MDEM_", names(equi7t3)[j], "_250m.tif"), a_nodata=-32767, ot="Int16", s_srs=proj4string(equi7t3[[j]]))
gdal_translate(paste0("MDEM_", names(equi7t3)[j], "_250m.sdat"), paste0("MDEM_", names(equi7t3)[j], "_250m.tif"), a_nodata=-32767, ot="Int16", s_srs=proj4string(equi7t3[[j]]))
gdalinfo(paste0("MDEM_", names(equi7t3)[j], "_250m.tif"))
gdal_translate(paste0("MDEM_", names(equi7t3)[j], "_250m.sdat"), paste0("MDEM_", names(equi7t3)[j], "_250m.tif"), a_nodata=-32767, ot="Int16", s_srs=proj4string(equi7t3[[j]]))
gdalinfo(paste0("MDEM_", names(equi7t3)[j], "_250m.tif"))
j=7
any(names(equi7t3)[j] %in% c("AF","EU"))
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
gdalinfo(paste0("MDEM_", names(equi7t3)[j], "_250m.tif"))
plot(equi7[[1]])
plot(equi7t3[[1]])
j=3
gdal_translate(paste0("MDEM_", names(equi7t3)[j], "_250m_f.sdat"), paste0("MDEM_", names(equi7t3)[j], "_250m.tif"), a_nodata=-32767, ot="Int16", s_srs=proj4string(equi7t3[[j]]))
gdalinfo(paste0("MDEM_", names(equi7t3)[j], "_250m.tif"))
j=2
gdal_translate(paste0("MDEM_", names(equi7t3)[j], "_250m_f.sdat"), paste0("MDEM_", names(equi7t3)[j], "_250m.tif"), a_nodata=-32767, ot="Int16", s_srs=proj4string(equi7t3[[j]]))
j=5
gdal_translate(paste0("MDEM_", names(equi7t3)[j], "_250m_f.sdat"), paste0("MDEM_", names(equi7t3)[j], "_250m.tif"), a_nodata=-32767, ot="Int16", s_srs=proj4string(equi7t3[[j]]))
j=6
gdal_translate(paste0("MDEM_", names(equi7t3)[j], "_250m_f.sdat"), paste0("MDEM_", names(equi7t3)[j], "_250m.tif"), a_nodata=-32767, ot="Int16", s_srs=proj4string(equi7t3[[j]]))
q()
load("../Equi7/equi7t3.rda")
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
gdalwarp("iceland_MDEM_EU_250m.sdat", "iceland_MDEM_EU_250m_ll.sdat",  s_srs=proj4string(equi7t3[["EU"]]),  t_srs="+proj=longlat +datum=WGS84")
gdalwarp("iceland_MDEM_EU_250m.sdat", "iceland_MDEM_EU_250m_ll.tif",  s_srs=proj4string(equi7t3[["EU"]]),  t_srs="+proj=longlat +datum=WGS84")
iceland@grid
iceland <- readGDAL("iceland_MDEM_EU_250m_ll.tif")
iceland@grid
library(plotKML)
kml(iceland, colour_scale=SAGA_pal[[1]], png.widht=iceland@grid@cells.dim[1]*3, png.height=iceland@grid@cells.dim[2]*3)
iceland$band1 <- ifelse(iceland$band1==0, NA, iceland$band1)
?kml
kml(iceland, raster_name="iceland_MDEM_EU_250m_ll.png", colour_scale=SAGA_pal[[1]], png.widht=iceland@grid@cells.dim[1]*3, png.height=iceland@grid@cells.dim[2]*3, z.lim=c(2,859))
gdalwarp("alaska_MDEM_NA_250m.sdat", "alaska_MDEM_NA_250m_ll.tif",  s_srs=proj4string(equi7t3[["NA"]]), t_srs="+proj=longlat +datum=WGS84")
alaska <- readGDAL("alaska_MDEM_NA_250m_ll.tif")
alaska <- ifelse(alaska$band1==0, NA, alaska$band1)
kml(alaska, raster_name="alaska_MDEM_NA_250m_ll.png", colour_scale=SAGA_pal[[1]], png.widht=alaska@grid@cells.dim[1]*3, png.height=alaska@grid@cells.dim[2]*3)
alaska <- readGDAL("alaska_MDEM_NA_250m_ll.tif")
alaska$band1 <- ifelse(alaska$band1==0, NA, alaska$band1)
kml(alaska, raster_name="alaska_MDEM_NA_250m_ll.png", colour_scale=SAGA_pal[[1]], png.widht=alaska@grid@cells.dim[1]*3, png.height=alaska@grid@cells.dim[2]*3)
q()
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
system(paste0(gdalwarp, ' iceland_MDEM_EU_250m.sdat iceland_MDEM_EU_250m_ll.tif -s_srs \"', proj4string(equi7t3[["EU"]]), '\" -t_srs \"+proj=longlat +datum=WGS84\"'))
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
system(paste0(gdalwarp, ' iceland_MDEM_EU_250m.sdat
iceland_MDEM_EU_250m_ll.tif -s_srs \"', proj4string(equi7t3[["EU"]]), '\" -t_srs \"+proj=longlat +datum=WGS84\"'))
system(paste0(gdalwarp, ' iceland_MDEM_EU_250m.sdat iceland_MDEM_EU_250m_ll.tif -s_srs \"', proj4string(equi7t3[["EU"]]), '\" -t_srs \"+proj=longlat +datum=WGS84\"'))
iceland <- readGDAL("iceland_MDEM_EU_250m_ll.tif")
iceland$band1 <- ifelse(iceland$band1==0, NA, iceland$band1)
kml(iceland, raster_name="iceland_MDEM_EU_250m_ll_new.png", colour_scale=SAGA_pal[[1]], png.widht=iceland@grid@cells.dim[1]*3, png.height=iceland@grid@cells.dim[2]*3, z.lim=c(2,859))
iceland <- readGDAL("iceland_MDEM_EU_250m_ll_old.tif")
iceland$band1 <- ifelse(iceland$band1==0, NA, iceland$band1)
kml(iceland, file.name="iceland_old.kml", raster_name="iceland_MDEM_EU_250m_ll_old.png", colour_scale=SAGA_pal[[1]], png.widht=iceland@grid@cells.dim[1]*3, png.height=iceland@grid@cells.dim[2]*3, z.lim=c(2,859))
q()
setwd("E:\git_WG\WorldGrids\MDEM")
setwd("E:\\git_WG\\WorldGrids\\MDEM")
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
system(paste0(gdalwarp, ' iceland_MDEM_EU_250m.sdat iceland_MDEM_EU_250m_ll.tif -s_srs \"', proj4string(equi7t3[["EU"]]), '\" -t_srs \"+proj=longlat +datum=WGS84\"'))
iceland <- readGDAL("iceland_MDEM_EU_250m_ll.tif")
iceland$band1 <- ifelse(iceland$band1==0, NA, iceland$band1)
kml(iceland, file.name="iceland.kml", raster_name="iceland_MDEM_EU_250m_ll.png", colour_scale=SAGA_pal[[1]], png.widht=iceland@grid@cells.dim[1]*3, png.height=iceland@grid@cells.dim[2]*3, z.lim=c(2,859))
gdal.dir <- shortPathName("C:/OSGeo4W64/bin")
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
system(paste0(gdalwarp, ' iceland_MDEM_EU_250m.sdat iceland_MDEM_EU_250m_ll.tif -s_srs \"', proj4string(equi7t3[["EU"]]), '\" -t_srs \"+proj=longlat +datum=WGS84\"'))
iceland <- readGDAL("iceland_MDEM_EU_250m_ll.tif")
iceland$band1 <- ifelse(iceland$band1==0, NA, iceland$band1)
kml(iceland, file.name="iceland.kml", raster_name="iceland_MDEM_EU_250m_ll.png", colour_scale=SAGA_pal[[1]], png.widht=iceland@grid@cells.dim[1]*3, png.height=iceland@grid@cells.dim[2]*3, z.lim=c(2,859))
gdal.dir <- shortPathName("C:/Program files/GDAL")
source(.trPaths[5], echo=TRUE, max.deparse.length=150)
q()
